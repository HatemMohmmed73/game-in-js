name: Deploy to Render

on:
  push:
    # üìù CHANGE THIS: Update branch name if deploying from different branch
    branches: [ main ]
  workflow_dispatch:

env:
  # üìù CHANGE THIS: Your Docker image name (e.g., "my-node-app")
  DOCKER_IMAGE: your-app-name
  
  # ‚úÖ These are standard - no change needed
  DOCKER_REGISTRY: ghcr.io
  DOCKER_USERNAME: ${{ github.actor }}
  DOCKER_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  NODE_VERSION: "20"
  
  # üìù CHANGE THESE: Match your app's configuration
  APP_PORT: 10000
  HEALTH_CHECK_PATH: "/health"
  STARTUP_DELAY: 5

jobs:
  test-and-validate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run tests
        run: npm test
        continue-on-error: true
      
      - name: Run linting
        run: npm run lint
        continue-on-error: true
      
      - name: Test Docker build
        run: docker build -t test-image .
      
      - name: Test container health
        run: |
          docker run -d -p ${{ env.APP_PORT }}:${{ env.APP_PORT }} --name test-container test-image
          echo "Waiting for server to start..."
          for i in {1..30}; do
            if curl -f http://localhost:${{ env.APP_PORT }}${{ env.HEALTH_CHECK_PATH }}; then
              echo "Health check passed!"
              docker stop test-container
              docker rm test-container
              exit 0
            fi
            echo "Attempt $i/30 - server not ready yet"
            sleep 2
          done
          echo "Health check failed after 60 seconds"
          docker logs test-container
          docker stop test-container
          docker rm test-container
          exit 1

  build-and-push:
    needs: test-and-validate
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_TOKEN }}
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ env.DOCKER_REGISTRY }}/${{ github.repository_owner }}/${{ env.DOCKER_IMAGE }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy-to-render:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to Render
        run: |
          # üìù SET THIS: Add your Render deploy hook URL to GitHub Secrets as 'RENDER_DEPLOY_HOOK'
          curl -X POST "${{ secrets.RENDER_DEPLOY_HOOK }}"
name: 'Deploy Tic-Tac-Toe App'
description: 'Deploy the Tic-Tac-Toe application to the specified environment'

inputs:
  environment:
    description: 'Target environment (development, staging, production)'
    required: true
  version:
    description: 'Application version to deploy'
    required: true

runs:
  using: 'composite'
  steps:
    - name: Configure AWS Credentials
      if: inputs.environment == 'production' || inputs.environment == 'staging'
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Deploy to ${{ inputs.environment }}
      shell: bash
      run: |
        echo "Deploying version ${{ inputs.version }} to ${{ inputs.environment }}"
        
        # Example deployment commands (customize based on your infrastructure)
        case "${{ inputs.environment }}" in
          development)
            # Development deployment (e.g., to a dev server)
            echo "Running development deployment..."
            # Add your development deployment commands here
            ;;
            
          staging)
            # Staging deployment (e.g., to a staging environment)
            echo "Running staging deployment..."
            # Example: Deploy to AWS ECS
            # aws ecs update-service \
            #   --cluster tic-tac-toe-staging \
            #   --service tic-tac-toe-service \
            #   --force-new-deployment \
            #   --task-definition $(aws ecs register-task-definition \
            #       --cli-input-json file://task-definition.json \
            #       --query 'taskDefinition.taskDefinitionArn' \
            #       --output text)
            ;;
            
          production)
            # Production deployment (e.g., to production environment)
            echo "Running production deployment..."
            # Example: Blue/Green deployment with AWS CodeDeploy
            # aws deploy create-deployment \
            #   --application-name tic-tac-toe-prod \
            #   --deployment-group-name tic-tac-toe-dg \
            #   --s3-location bucket=my-deployment-bucket,key=app-${{ inputs.version }}.zip,bundleType=zip
            ;;
        esac
      
    - name: Verify deployment
      shell: bash
      run: |
        # Add verification steps (e.g., health check, smoke tests)
        echo "Verifying deployment to ${{ inputs.environment }}..."
        # Example: curl -sSf ${{ env.DEPLOYMENT_URL }}/health
        
    - name: Output deployment URL
      id: set-output
      shell: bash
      run: |
        # Set the deployment URL as an output
        # This should be set to your actual deployment URL
        echo "url=https://${{ inputs.environment }}.example.com" >> $GITHUB_OUTPUT

outputs:
  url:
    description: 'The URL where the application was deployed'
    value: ${{ steps.set-output.outputs.url }}
